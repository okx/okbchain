version: 2.1

commands:
  make:
    parameters:
      description:
        type: string
      target:
        type: string
    steps:
      - attach_workspace:
          at: /tmp/bin
      - restore_cache:
          name: "Restore source code cache"
          keys:
            - go-src-v1-{{ .Revision }}
      - checkout
      - restore_cache:
          name: "Restore go modules cache"
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: << parameters.description >>
          command: |
            export BINDIR=/tmp/bin
            make << parameters.target >>
jobs:
  build:
    docker:
      - image: cimg/go:1.20
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout
      - restore_cache:
          name: Restore go modules cache
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: 
          name: run go mod tidy first
          command: go mod tidy
      # If there are any diffs from goimports or go mod tidy, fail.
      - run:
          name: Verify no changes from go mod tidy
          command: |
            if [ -n "$(git status --porcelain)" ]; then
              echo "need run 'go mod tidy' before commit"
              exit 1
            fi
      - run:
          name: Cache go modules
          command: make go-mod-cache
      - run:
          name: Build
          command: make build
      - save_cache:
          name: Save go modules cache
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - save_cache:
          name: Save source code cache
          key: go-src-v1-{{ .Revision }}
          paths:
            - ".git"
      - run:
          name: Run tests with coverage and upload codecov
          no_output_timeout: 30m
          command: |
            echo 'noop'
            #touch coverage.txt
            #bash <(curl -s https://codecov.io/bash) -f coverage.txt
#            ("./app" "./x/dex" "./x/backend"   "./x/order"  "./x/token" "./x/ammswap" "./x/farm"  "./x/backend")
#            included_packages=("./app" "./x/backend" "./x/common" "./x/params" "./x/distribution" "./x/staking" "./x/gov" "./x/dex" "./x/ammswap" "./x/token" "./x/order" "./x/farm" "./x/evm")

